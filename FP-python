import tkinter as tk
from tkinter import messagebox

# Mock database
users = {
    '123456': {'pin': '1111', 'balance': 1000},
}

current_user = '123456'  # Assuming a fixed current user for simplicity

def authenticate(pin):
    user = users.get(current_user)
    if user and user['pin'] == pin:
        return True
    return False

def update_balance(amount):
    user = users.get(current_user)
    if user:
        user['balance'] += amount
        return True
    return False

def show_frame(frame):
    frame.tkraise()

def start_transaction():
    pin = pin_entry.get()
    if authenticate(pin):
        show_frame(main_menu_frame)
    else:
        messagebox.showerror("Authentication Failed", "Invalid PIN")
        pin_entry.delete(0, 'end')

def withdraw():
    amount = 100  # Fixed amount for simplicity
    if users[current_user]['balance'] >= amount:
        update_balance(-amount)
        messagebox.showinfo("Withdrawal", f"Successfully withdrawn ${amount}")
        show_frame(transaction_complete_frame)
    else:
        messagebox.showerror("Error", "Insufficient balance")

def deposit():
    amount = 100  # Fixed amount for simplicity
    update_balance(amount)
    messagebox.showinfo("Deposit", f"Successfully deposited ${amount}")
    show_frame(transaction_complete_frame)

def check_balance():
    balance = users[current_user]['balance']
    messagebox.showinfo("Balance", f"Your current balance is ${balance}")

# GUI Setup
root = tk.Tk()
root.title("ATM")

# Frame Setup
welcome_frame = tk.Frame(root)
pin_entry_frame = tk.Frame(root)
main_menu_frame = tk.Frame(root)
transaction_complete_frame = tk.Frame(root)

for frame in (welcome_frame, pin_entry_frame, main_menu_frame, transaction_complete_frame):
    frame.grid(row=0, column=0, sticky='nsew')

# Welcome Frame
welcome_label = tk.Label(welcome_frame, text="Welcome to ATM")
welcome_label.pack(pady=10)
start_button = tk.Button(welcome_frame, text="Start", command=lambda: show_frame(pin_entry_frame))
start_button.pack()

# PIN Entry Frame
pin_entry_label = tk.Label(pin_entry_frame, text="Enter your PIN")
pin_entry_label.pack(pady=10)
pin_entry = tk.Entry(pin_entry_frame, show="*")
pin_entry.pack()
submit_button = tk.Button(pin_entry_frame, text="Submit", command=start_transaction)
submit_button.pack()

# Main Menu Frame
withdraw_button = tk.Button(main_menu_frame, text="Withdraw $100", command=withdraw)
withdraw_button.pack(fill=tk.X)
deposit_button = tk.Button(main_menu_frame, text="Deposit $100", command=deposit)
deposit_button.pack(fill=tk.X)
balance_button = tk.Button(main_menu_frame, text="Check Balance", command=check_balance)
balance_button.pack(fill=tk.X)
exit_button = tk.Button(main_menu_frame, text="Exit", command=lambda: root.destroy())
exit_button.pack(fill=tk.X)

# Transaction Complete Frame
complete_label = tk.Label(transaction_complete_frame, text="Transaction Complete")
complete_label.pack(pady=10)
back_button = tk.Button(transaction_complete_frame, text="Back to Main Menu", command=lambda: show_frame(main_menu_frame))
back_button.pack()

show_frame(welcome_frame)

root.mainloop()
